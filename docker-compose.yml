version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AWS_REGION
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - AWS_SECRET_NAME
    depends_on:
      - db
      - jaeger

  notifier:
    build:
      context: .
      dockerfile: Dockerfile.notifier
    ports:
      - "5001:8080"
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - AWS_REGION
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - AWS_SECRET_NAME
    depends_on:
      - jaeger

  ecs:
    build:
      context: .
      dockerfile: Dockerfile.ecs
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  persister:
    build:
      context: .
      dockerfile: Dockerfile.persister
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AWS_REGION
      - AWS_ACCESS_KEY
      - AWS_SECRET_KEY
      - AWS_SECRET_NAME
    depends_on:
      - jaeger

  socket:
    build:
      context: .
      dockerfile: Dockerfile.socket
    ports:
      - "5003:6000"

  db:
    image: "mariadb:latest"
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 11235
      MYSQL_DATABASE: marketdata
      MYSQL_USER: root
      MYSQL_PASSWORD: 11235
    volumes:
      - db-data:/var/lib/mysql
      
  jaeger:
    image: jaegertracing/opentelemetry-all-in-one:latest
    container_name: jaeger
    ports:
      - "13133:13133"
      - "16686:16686"
      - "4317:4317"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    restart: unless-stopped

volumes:
  db-data: